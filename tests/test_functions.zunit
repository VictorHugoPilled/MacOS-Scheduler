#!/usr/bin/env zunit

@test 'testparseCSVWithCSV' {

      load ../scheduler.sh
      export csv='scheduler.csv'
      result=$(parseCSV $csv)
      assert $result is_not_empty
      assert $result does_not_contain 'File not found'
}

@test 'testparseCSVWithNoCSV' {

      load ../scheduler.sh
      result=$(parseCSV)
      assert $result is_not_empty
      assert $result same_as 'File not found'
}

@test 'testgetTodaysScriptsWithCSV' {

      load ../scheduler.sh
      export csv='scheduler.csv'
      result=$(getTodaysScripts $csv)
      assert $result is_not_empty
      assert $result does_not_contain 'No scripts today'
      
}

@test 'testgetTodaysScriptsWithNoCSV' {

      load ../scheduler.sh
      result=$(getTodaysScripts)
      assert $result is_empty

      
}


@test 'testScheduleFileExists' {

      run rm -rf ~/testfile.txt
      load ../scheduler.sh
      result=$(schedule ~/createFile.py $(date "+%R"))
      echo $result
      # if scheduled, file will be created with current time
      assert ~/testfile.txt exists

}

@test 'testScheduleNonExistentFile' {

      load ../scheduler.sh
      result=$(schedule fake.py $(date "+%R"))
      assert $result same_as "File does not exists"
      

}


@test 'testMainWithCSV' {

      # delete previous tests file
      run rm -rf ~/test.csv
      run rm -rf ~/testfile.txt
      
      # create a new test file
      run touch ~/test.csv
      
      # send one entry with today's date to the csv
      export csv=~/test.csv
      run echo "$(date +%A),$(date +%R),$(pwd)/createFile.py" >> ~/test.csv

      # load and run
      load ../scheduler.sh
      result=$(main $csv)

      
      assert $result same_as 'Done'
      # if scheduled, file will be created with current time
      assert ~/testfile.txt exists

      
}

@test 'testMainNoCSV' {

      load ../scheduler.sh
      result=$(main)
      assert $result same_as 'No scripts to run'
}